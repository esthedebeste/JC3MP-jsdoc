[
  {
    "name": "Camera",
    "description": "",
    "properties": [
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Camera's position in the game world",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the Camera's rotation in the game world",
        "readonly": false
      },
      {
        "name": "fieldOfView",
        "type": "number",
        "description": "the cameras field of view",
        "readonly": false
      },
      {
        "name": "attachedToPlayer",
        "type": "boolean",
        "description": "Whether the camera is attached to the local player or it can be set somewhere else",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Checkpoint",
    "description": "Destroys the Checkpoint",
    "properties": [
      {
        "name": "modelHash",
        "type": "number",
        "description": "model hash of the Checkpoint (TODO: reference to all hashes)",
        "readonly": true
      },
      {
        "name": "type",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Checkpoint's position in the game world",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the Checkpoint's rotation in the game world",
        "readonly": false
      },
      {
        "name": "radius",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "visible",
        "type": "boolean",
        "description": "whether the Checkpoint is visible to all Players.",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Auto Destroy"
      ],
      "yes": [
        "Constructible",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "EventInstance",
    "description": "",
    "properties": [
      {
        "name": "oneShot",
        "type": "boolean",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "EventSystem",
    "description": "The EventSystem is used to communicate between client packages and to the server.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "the event name",
        "readonly": false
      },
      {
        "name": "handler",
        "type": "function",
        "description": "the function to execute when the event is called",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Add",
        "description": "Adds an event handler\n**returns:** _{@link EventInstance}_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "the event name"
          },
          {
            "name": "handler",
            "type": "function",
            "description": "the function to execute when the event is called"
          }
        ],
        "returns": "EventInstance"
      },
      {
        "name": "Call",
        "description": "Calls an Event.\n\nThis function always returns an array with all return values from all event handlers for that name.\n**returns:** _Array_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "Array"
      },
      {
        "name": "Remove",
        "description": "Parameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | {@link EventInstance} |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "RemoveAll",
        "description": "EventSystem.RemoveAll(string p1)\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | string |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "AddRemoteCallable",
        "description": "EventSystem.AddRemoteCallable(string name, function handler)\nAdds an event that can be called from the server.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| name | string | the event name |\n| handler | function | the function to execute when the event is called |\nExample\n```js\njcmp.events.AddRemoteCallable('MyEvent', () => { print(`the server called MyEvent!`); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "CallRemote",
        "description": "EventSystem.CallRemote(string name, any ...args)\nCalls an Event on the server scripts. Other than the normal ```js\nCall\n``` function, this function does not return anything.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| name | string | event name |\n| ...args | any | optional event arguments |\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "HealthEffect",
    "description": "Destroys the HealthEffect",
    "properties": [
      {
        "name": "regenRate",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "regenCooldown",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": []
    }
  },
  {
    "name": "JCMPNamespace",
    "description": "Global JCMP class. Use jcmp in your script.",
    "properties": [
      {
        "name": "packages",
        "type": "Array<Package>",
        "description": "all loaded packages",
        "readonly": true
      },
      {
        "name": "events",
        "type": "EventSystem",
        "description": "event system",
        "readonly": true
      },
      {
        "name": "networkVersion",
        "type": "number",
        "description": "the current network version of the server",
        "readonly": true
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "readonly": true
      },
      {
        "name": "approvedWebsites",
        "type": "Array",
        "description": "",
        "readonly": true
      },
      {
        "name": "ui",
        "type": "JCMPUINamespace",
        "description": "",
        "readonly": true
      },
      {
        "name": "viewportSize",
        "type": "Vector2f",
        "description": "",
        "readonly": true
      },
      {
        "name": "localPlayer",
        "type": "LocalPlayer",
        "description": "",
        "readonly": true
      },
      {
        "name": "players",
        "type": "Array<NetworkPlayer>",
        "description": "all players",
        "readonly": true
      },
      {
        "name": "world",
        "type": "World",
        "description": "",
        "readonly": true
      },
      {
        "name": "settings",
        "type": "Settings",
        "description": "",
        "readonly": true
      },
      {
        "name": "vehicles",
        "type": "Array",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "print",
        "description": "Prints a message to scripting.log.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| message | string | Message to append to scripting.log |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "printLog",
        "description": "JCMPNamespace.printLog(string filename, string message)\nOutputs message to a specified file.\nParameter\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible"
      ],
      "yes": [
        "Auto Destroy",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "JCMPUINamespace",
    "description": "",
    "properties": [
      {
        "name": "p1",
        "type": "string",
        "description": "",
        "readonly": false
      },
      {
        "name": "p2",
        "type": "function",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "AddEvent",
        "description": "Parameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | string |  |\n| p2 | function |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "CallEvent",
        "description": "JCMPUINamespace.CallEvent(string p1, Array p2)\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | string |  |\n| p2 | Array |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "ShowHud",
        "description": "JCMPUINamespace.ShowHud()\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "HideHud",
        "description": "JCMPUINamespace.HideHud()\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "IsHudVisible",
        "description": "JCMPUINamespace.IsHudVisible()\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible"
      ],
      "yes": [
        "Auto Destroy",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "LocalPlayer",
    "description": "Enable the local player to use certain ingame abilities",
    "properties": [
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the LocalPlayer's position in the game world",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the LocalPlayer's rotation in the game world",
        "readonly": false
      },
      {
        "name": "lookAt",
        "type": "Vector3f",
        "description": "",
        "readonly": true
      },
      {
        "name": "camera",
        "type": "Camera",
        "description": "the players camera object",
        "readonly": true
      },
      {
        "name": "frozen",
        "type": "boolean",
        "description": "Whether the players character is frozen or not",
        "readonly": false
      },
      {
        "name": "controlsEnabled",
        "type": "boolean",
        "description": "Whether the player can control his character or not",
        "readonly": false
      },
      {
        "name": "baseState",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "dimension",
        "type": "number",
        "description": "world dimension of the LocalPlayer.",
        "readonly": true
      },
      {
        "name": "playerStateBits1",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "playerStateBits2",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "wingsuit",
        "type": "Wingsuit",
        "description": "",
        "readonly": true
      },
      {
        "name": "healthEffects",
        "type": "HealthEffect",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "SetAbilityEnabled",
        "description": "Enable the local player to use certain ingame abilities\nAvailable abilities\n| Name | Value |\n| :-- | :-- |\n| GRAPPLING\\_HOOK | 0xCB836D80 |\n| PARACHUTE | 0xCEEFA27A |\n| WINGSUIT | 0xE060F641 |\n**returns:** _void_\n",
        "params": [
          {
            "name": "ability",
            "type": "number",
            "description": "the designated ability ID (see above)"
          },
          {
            "name": "enabled",
            "type": "boolean",
            "description": "set to true to enable the ability, false to disable it"
          }
        ],
        "returns": "void"
      },
      {
        "name": "IsAbilityEnabled",
        "description": "Check if a certain ingame ability has been enabled for the local player or not\n**returns:** _boolean_\n",
        "params": [
          {
            "name": "ability",
            "type": "number",
            "description": ""
          }
        ],
        "returns": "boolean"
      },
      {
        "name": "GetRenderPosition",
        "description": "returns the render position\n**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "dtf",
            "type": "number",
            "description": "delta timing"
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "GetRenderTransform",
        "description": "returns the render transform matrix\n**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "dtf",
            "type": "number",
            "description": "delta timing"
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "GetBoneTransform",
        "description": "returns the bone transform matrix\nAvailable bones\n| Name | Value |\n| :-- | :-- |\n| REFERENCE | 0x8EB2FD7C |\n| OFFSET | 0x4AAA87DB |\n| HIPS | 0x68C6A89F |\n| SPINE | 0xE28C84B |\n| SPINE\\_2 | 0xE4DBE36F |\n| SPINE\\_3 | 0x6FE84908 |\n| STERNUM | 0x9DCAB8BF |\n| NECK | 0xA1C96158 |\n| HEAD | 0xA877D9CC |\n| JAW | 0x92F8D847 |\n| MID\\_LOWER\\_LIP | 0xEA3E047C |\n| LEFT\\_MOUTH\\_CORNER | 0xE9F7F4C9 |\n| RIGHT\\_MOUTH\\_CORNER | 0xF8C71902 |\n| NOSE | 0x4495EABA |\n| MID\\_UPPER\\_LIP | 0x87AE44CB |\n| UPPER\\_LIDS | 0xC851BC59 |\n| LOWER\\_LIDS | 0x9ED86F9E |\n| LEFT\\_EYEBROW\\_MID | 0xD3FBF46E |\n| RIGHT\\_EYEBROW\\_MID | 0xE75361A8 |\n| LEFT\\_EYE | 0x96A32E27 |\n| RIGHT\\_EYE | 0x24FA932B |\n| LEFT\\_SHOULDER | 0x8735207D |\n| LEFT\\_ARM | 0x4DF0A2B1 |\n| LEFT\\_FORE\\_ARM | 0xDEB7751B |\n| LEFT\\_HAND | 0x57C83F95 |\n| LEFT\\_HAND\\_ATTACH | 0x4190BFF7 |\n| LEFT\\_HAND\\_THUMB | 0x3C7AC14F |\n| LEFT\\_HAND\\_THUMB\\_2 | 0xEF65A0C0 |\n| LEFT\\_HAND\\_THUMB\\_3 | 0x2EF7C25D |\n| LEFT\\_HAND\\_INDEX | 0xFC8B8AE8 |\n| LEFT\\_HAND\\_INDEX\\_2 | 0xB275E0DC |\n| LEFT\\_HAND\\_INDEX\\_3 | 0xA02A2C09 |\n| LEFT\\_HAND\\_MIDDLE | 0x9B641407 |\n| LEFT\\_HAND\\_MIDDLE\\_2 | 0xBB9B9265 |\n| LEFT\\_HAND\\_MIDDLE\\_3 | 0x40553E55 |\n| LEFT\\_IN\\_HAND\\_RING | 0xF64929C5 |\n| LEFT\\_HAND\\_RING | 0xDF6E85D2 |\n| LEFT\\_HAND\\_RING\\_2 | 0xADD7F8D8 |\n| LEFT\\_HAND\\_RING\\_3 | 0x37EDFBE6 |\n| LEFT\\_IN\\_HAND\\_PINKY | 0x142B3DFF |\n| LEFT\\_HAND\\_PINKY | 0xC104DEE3 |\n| LEFT\\_HAND\\_PINKY\\_2 | 0x869AB17 |\n| LEFT\\_HAND\\_PINKY\\_3 | 0xE3BBD91D |\n| LEFT\\_HAND\\_ATTACH\\_2 | 0x7DC90FBE |\n| LEFT\\_FORE\\_ARM\\_ROLL | 0x9C12B794 |\n| RIGHT\\_SHOULDER | 0x302EEE80 |\n| RIGHT\\_ARM | 0x19D4B6CF |\n| RIGHT\\_FORE\\_ARM | 0xBD2F01EA |\n| RIGHT\\_HAND | 0x69E77FA6 |\n| RIGHT\\_HAND\\_ATTACH | 0x65C5D2EB |\n| RIGHT\\_HAND\\_THUMB | 0x8F745C4E |\n| RIGHT\\_HAND\\_THUMB\\_2 | 0xFADC7D09 |\n| RIGHT\\_HAND\\_THUMB\\_3 | 0xACA0D4E6 |\n| RIGHT\\_HAND\\_INDEX | 0xB26EE68B |\n| RIGHT\\_HAND\\_INDEX\\_2 | 0xE64CD51C |\n| RIGHT\\_HAND\\_INDEX\\_3 | 0x3D143817 |\n| RIGHT\\_HAND\\_MIDDLE | 0x3EF00B1A |\n| RIGHT\\_HAND\\_MIDDLE\\_2 | 0x4DD19349 |\n| RIGHT\\_HAND\\_MIDDLE\\_3 | 0x92662F93 |\n| RIGHT\\_IN\\_HAND\\_RING | 0x422FF300 |\n| RIGHT\\_HAND\\_RING | 0xC4351CB |\n| RIGHT\\_HAND\\_RING\\_2 | 0x7165D1D3 |\n| RIGHT\\_HAND\\_RING\\_3 | 0x2EE173DF |\n| RIGHT\\_IN\\_HAND\\_PINKY | 0x153AD952 |\n| RIGHT\\_HAND\\_PINKY | 0x477CE2E |\n| RIGHT\\_HAND\\_PINKY\\_2 | 0x197F6405 |\n| RIGHT\\_HAND\\_PINKY\\_3 | 0x7A36193E |\n| RIGHT\\_HAND\\_ATTACH\\_2 | 0x8A9856CD |\n| RIGHT\\_FORE\\_ARM\\_ROLL | 0xC9FC0323 |\n| BACK\\_ATTACH | 0x204A8793 |\n| BACK\\_ATTACH\\_2 | 0xB7D0AD64 |\n| LEFT\\_UP\\_LEG | 0x26392BC2 |\n| LEFT\\_LEG | 0x782BF8F9 |\n| LEFT\\_FOOT | 0x661134AC |\n| LEFT\\_TOE\\_BASE | 0xB31EE9AA |\n| LEFT\\_LEG\\_ROLL | 0x84D5F65C |\n| LEFT\\_HOLSTER\\_ATTACH | 0x63ABE53F |\n| LEFT\\_UP\\_LEG\\_ROLL | 0x7CA59BC0 |\n| RIGHT\\_UP\\_LEG | 0x8F232B15 |\n| RIGHT\\_LEG | 0xA89A815D |\n| RIGHT\\_FOOT | 0xFF3E004B |\n| RIGHT\\_TOE\\_BASE | 0xDD2D6F75 |\n| RIGHT\\_LEG\\_ROLL | 0xCFA333AA |\n| RIGHT\\_HOLSTER\\_ATTACH | 0x7BD7F313 |\n| RIGHT\\_UP\\_LEG\\_ROLL | 0x272175A5 |\n| LEFT\\_HAND\\_IK\\_TARGET | 0xA73E08C1 |\n| RIGHT\\_HAND\\_IK\\_TARGET | 0xF7EEABA9 |\n**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Matrix",
    "description": "new Matrix()",
    "properties": [
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Matrix's position in the game world",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Transpose",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      },
      {
        "name": "Scale",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "scale",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "Rotate",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "factor",
            "type": "number",
            "description": ""
          },
          {
            "name": "rotation",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "Translate",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "translation",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "LookAt",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Vector3f",
            "description": ""
          },
          {
            "name": "p2",
            "type": "Vector3f",
            "description": ""
          },
          {
            "name": "p3",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "mul",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "NetworkPlayer",
    "description": "Network Player",
    "properties": [
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "name",
        "type": "string",
        "description": "the NetworkPlayer's name",
        "readonly": true
      },
      {
        "name": "health",
        "type": "number",
        "description": "the NetworkPlayer's current health",
        "readonly": true
      },
      {
        "name": "maxHealth",
        "type": "number",
        "description": "the NetworkPlayer's max health",
        "readonly": true
      },
      {
        "name": "localPlayer",
        "type": "boolean",
        "description": "deprecated  read only",
        "readonly": false
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the NetworkPlayer's position in the game world",
        "readonly": true
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the NetworkPlayer's rotation in the game world",
        "readonly": true
      },
      {
        "name": "playerStateBits1",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "playerStateBits2",
        "type": "number",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "GetBoneTransform",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "number",
            "description": ""
          },
          {
            "name": "p2",
            "type": "number",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "GetRenderTransform",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "NetworkVehicle",
    "description": "",
    "properties": [
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "health",
        "type": "number",
        "description": "the NetworkVehicle's current health",
        "readonly": true
      },
      {
        "name": "maxHealth",
        "type": "number",
        "description": "the NetworkVehicle's max health",
        "readonly": true
      },
      {
        "name": "aabb",
        "type": "Array",
        "description": "",
        "readonly": true
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the NetworkVehicle's position in the game world",
        "readonly": true
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the NetworkVehicle's rotation in the game world",
        "readonly": true
      },
      {
        "name": "angularVelocity",
        "type": "Vector3f",
        "description": "",
        "readonly": true
      },
      {
        "name": "linearVelocity",
        "type": "Vector3f",
        "description": "",
        "readonly": true
      },
      {
        "name": "aimPosition",
        "type": "Vector3f",
        "description": "",
        "readonly": true
      },
      {
        "name": "engineRPM",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "type",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "modelHash",
        "type": "number",
        "description": "model hash of the NetworkVehicle (TODO: reference to all hashes)",
        "readonly": true
      },
      {
        "name": "gear",
        "type": "null",
        "description": "",
        "readonly": true
      },
      {
        "name": "nitroEnabled",
        "type": "boolean",
        "description": "",
        "readonly": true
      },
      {
        "name": "turboJumpEnabled",
        "type": "boolean",
        "description": "",
        "readonly": true
      },
      {
        "name": "speedKph",
        "type": "number",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "GetRenderTransform",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Package",
    "description": "A scripting package that is available or running already",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "the Package's name",
        "readonly": true
      },
      {
        "name": "dir",
        "type": "string",
        "description": "the path to the package",
        "readonly": true
      },
      {
        "name": "valid",
        "type": "boolean",
        "description": "whether the configuration of the package is valid",
        "readonly": true
      },
      {
        "name": "config",
        "type": "string",
        "description": "JSON-encoded string of the package.json",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Start",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nStarts the package\n**returns:** _boolean_\n",
        "params": [],
        "returns": "boolean"
      },
      {
        "name": "Stop",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nStops the package\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "POI",
    "description": "Destroys the POI",
    "properties": [
      {
        "name": "type",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "progress",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "progressMax",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the POI's position in the game world",
        "readonly": false
      },
      {
        "name": "minDistance",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDistance",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "text",
        "type": "string",
        "description": "",
        "readonly": false
      },
      {
        "name": "visible",
        "type": "boolean",
        "description": "whether the POI is visible to all Players.",
        "readonly": false
      },
      {
        "name": "flashing",
        "type": "boolean",
        "description": "",
        "readonly": false
      },
      {
        "name": "clampedToScreen",
        "type": "boolean",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Auto Destroy"
      ],
      "yes": [
        "Constructible",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "Renderer",
    "description": "Sets the matrix that describes the coordinate system the renderer is drawing to.",
    "properties": [
      {
        "name": "viewportSize",
        "type": "Vector2f",
        "description": "",
        "readonly": true
      },
      {
        "name": "dtf",
        "type": "number",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "EnableCulling",
        "description": "Parameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| enabled | boolean | Enables or disables culling. |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "SetTransform",
        "description": "Renderer.SetTransform({@link Matrix} matrix)\nSets the matrix that describes the coordinate system the renderer is drawing to.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| matrix | {@link Matrix} | The new transformation 4x4 matrix |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "DrawText",
        "description": "Renderer.DrawText(string text, {@link Vector3f} position, {@link Vector2f} maxSize, {@link RGBA} color, number fontSize, string fontName)\nDraws a text to the screen or world.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| text | string | The text you want to draw |\n| position | {@link Vector3f} | The position vector. Set the z-coordinate to 0.5 if you render to the screen. |\n| maxSize | {@link Vector2f} | Maximum size |\n| color | {@link RGBA} | Text color |\n| fontSize | number | Font size |\n| fontName | string | Font name (all Windows fonts are valid here) |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "MeasureText",
        "description": "Renderer.MeasureText(string text, number fontSize, string fontName)\nReturns the physical dimensions of a text.\n**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "text",
            "type": "string",
            "description": "Text"
          },
          {
            "name": "fontSize",
            "type": "number",
            "description": "Font size"
          },
          {
            "name": "fontName",
            "type": "string",
            "description": "Font name"
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "DrawRect",
        "description": "Draws a rectangle (behaves similarly to DrawText).\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| position | \\[{@link Vector3f}, {@link Vector2f}\\] | Position |\n| size | {@link Vector2f} | Size |\n| color | {@link RGBA} | Text color |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "DrawLine",
        "description": "Renderer.DrawLine(\\[{@link Vector3f}, {@link Vector2f}\\] start, \\[{@link Vector3f}, {@link Vector2f}\\] end, {@link RGBA} color)\nDraws a rectangle (behaves similarly to DrawText).\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| start | \\[{@link Vector3f}, {@link Vector2f}\\] | Start position |\n| end | \\[{@link Vector3f}, {@link Vector2f}\\] | End position |\n| color | {@link RGBA} | Text color |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "DrawTexture",
        "description": "Renderer.DrawTexture({@link Texture} texture, \\[{@link Vector3f}, {@link Vector2f}\\] position, {@link Vector2f} size)\nDraws a texture object.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| texture | {@link Texture} | the {@link Texture} to draw |\n| position | \\[{@link Vector3f}, {@link Vector2f}\\] | Position |\n| size | {@link Vector2f} | Size |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "WorldToScreen",
        "description": "Renderer.WorldToScreen({@link Vector3f} p1)\n**returns:** _{@link Vector2f}_\n",
        "params": [],
        "returns": "Vector2f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "RGB",
    "description": "new RGB(number r, number g, number b)",
    "properties": [
      {
        "name": "r",
        "type": "number",
        "description": "red channel value (0-255)",
        "readonly": false
      },
      {
        "name": "g",
        "type": "number",
        "description": "green channel value (0-255)",
        "readonly": false
      },
      {
        "name": "b",
        "type": "number",
        "description": "blue channel value (0-255)",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "r",
          "type": "number",
          "description": "red channel value (0-255)",
          "optional": true
        },
        {
          "name": "g",
          "type": "number",
          "description": "green channel value (0-255)",
          "optional": true
        },
        {
          "name": "b",
          "type": "number",
          "description": "blue channel value (0-255)",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "RGBA",
    "description": "new RGBA(number r, number g, number b, number a)",
    "properties": [
      {
        "name": "r",
        "type": "number",
        "description": "red channel value (0-255)",
        "readonly": true
      },
      {
        "name": "g",
        "type": "number",
        "description": "green channel value (0-255)",
        "readonly": true
      },
      {
        "name": "b",
        "type": "number",
        "description": "blue channel value (0-255)",
        "readonly": true
      },
      {
        "name": "a",
        "type": "number",
        "description": "alpha channel value (0-255)",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "r",
          "type": "number",
          "description": "red channel value (0-255)",
          "optional": true
        },
        {
          "name": "g",
          "type": "number",
          "description": "green channel value (0-255)",
          "optional": true
        },
        {
          "name": "b",
          "type": "number",
          "description": "blue channel value (0-255)",
          "optional": true
        },
        {
          "name": "a",
          "type": "number",
          "description": "alpha channel value (0-255)",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Settings",
    "description": "Just don't use it for now.",
    "properties": [
      {
        "name": "p1",
        "type": "string",
        "description": "",
        "readonly": false
      },
      {
        "name": "p2",
        "type": "any",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Set",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | string |  |\n| p2 | any |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Get",
        "description": "Settings.Get(string p1)\nThis function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\n**returns:** _any_\n",
        "params": [
          {
            "name": "p1",
            "type": "string",
            "description": ""
          }
        ],
        "returns": "any"
      },
      {
        "name": "Exists",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\n**returns:** _boolean_\n",
        "params": [
          {
            "name": "p1",
            "type": "string",
            "description": ""
          }
        ],
        "returns": "boolean"
      },
      {
        "name": "Delete",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\n**returns:** _boolean_\n",
        "params": [
          {
            "name": "p1",
            "type": "string",
            "description": ""
          }
        ],
        "returns": "boolean"
      },
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": []
    }
  },
  {
    "name": "Texture",
    "description": "new Texture(string file)",
    "properties": [
      {
        "name": "baseColor",
        "type": "RGBA",
        "description": "",
        "readonly": false
      },
      {
        "name": "size",
        "type": "Vector2f",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "file",
          "type": "string",
          "description": "path to the texture file"
        }
      ]
    }
  },
  {
    "name": "TimeOfDay",
    "description": "",
    "properties": [
      {
        "name": "hour",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "minute",
        "type": "number",
        "description": "",
        "readonly": true
      },
      {
        "name": "second",
        "type": "number",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Vector2",
    "description": "new Vector2(number x, number y)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector2",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector2f",
    "description": "new Vector2f(number x, number y)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector2f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [],
        "returns": "Vector2f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector3",
    "description": "new Vector3(number x, number y, number z)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector3",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector3f",
    "description": "new Vector3f(number x, number y, number z)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector3f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [],
        "returns": "Vector3f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector4",
    "description": "new Vector4(number x, number y, number z, number w)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "w",
        "type": "number",
        "description": "W value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector4",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        },
        {
          "name": "w",
          "type": "number",
          "description": "W value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector4f",
    "description": "new Vector4f(number x, number y, number z, number w)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "w",
        "type": "number",
        "description": "W value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector4f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [],
        "returns": "Vector4f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        },
        {
          "name": "w",
          "type": "number",
          "description": "W value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "WebUIWindow",
    "description": "new WebUIWindow(string name, string location, Vector2 size)",
    "properties": [
      {
        "name": "size",
        "type": "Vector2",
        "description": "the size of the CEF UI window",
        "readonly": false
      },
      {
        "name": "location",
        "type": "string",
        "description": "the location of the page which CEF should load",
        "readonly": false
      },
      {
        "name": "hidden",
        "type": "boolean",
        "description": "whether the UI should be hidden or not",
        "readonly": false
      },
      {
        "name": "position",
        "type": "Vector2",
        "description": "the WebUIWindow's position in the game world",
        "readonly": false
      },
      {
        "name": "autoResize",
        "type": "boolean",
        "description": "whether the CEF UI should resize itself when the game resolution is changed or not",
        "readonly": false
      },
      {
        "name": "captureMouseInput",
        "type": "boolean",
        "description": "whether mouse input should be captured by the CEF UI or not",
        "readonly": false
      },
      {
        "name": "texture",
        "type": "Texture",
        "description": "the CEF UI texture",
        "readonly": true
      },
      {
        "name": "autoRenderTexture",
        "type": "boolean",
        "description": "whether the texture is automatically drawn by the renderer or not",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "BringToFront",
        "description": "Brings the CEF UI to the front\nExample\n```js\nfunction createMyUI() { var firstUI = new WebUIWindow(\"myFirstUI\", \"package://my_client_package/index1.html\", new Vector2(jcmp.viewportSize.x, jcmp.viewportSize.y)); var secondUI = new WebUIWindow(\"mySecondUI\", \"package://my_client_package/index2.html\", new Vector2(jcmp.viewportSize.x, jcmp.viewportSize.y)); //Brings \"myFirstUI\" to the front so it is visible //Without this, we would see the second created UI on top and not the first one firstUI.BringToFront(); } createMyUI();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Reload",
        "description": "WebUIWindow.Reload(boolean ignoreCache)\nReload a certain CEF UI\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| ignoreCache | boolean | whether the cache should be ignored |\nExample\n```js\nfunction createMyUI() { var myUI = new WebUIWindow(\"myUI\", \"package://my_client_package/index1.html\", new Vector2(jcmp.viewportSize.x, jcmp.viewportSize.y)); //Change the location property and force the UI to reload myUI.location = \"package://my_client_package/index2.html\"; myUI.Reload(true); } createMyUI();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "CallEvent",
        "description": "WebUIWindow.CallEvent(string name, any ...args)\nCalls an Event on the UI that has been added using ```js\njcmp.AddEvent\n```\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "AddEvent",
        "description": "Adds an Event Handler so the UI can call it using ```js\njcmp.CallLocalEvent\n```\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "handler",
            "type": "function",
            "description": "handler function"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": [
        "Constructible"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "name",
          "type": "string",
          "description": "the internal name of the CEF UI window"
        },
        {
          "name": "location",
          "type": "string",
          "description": "the location of the page which CEF should load"
        },
        {
          "name": "size",
          "type": "Vector2",
          "description": "the size of the CEF UI window"
        }
      ]
    }
  },
  {
    "name": "Wingsuit",
    "description": "Local Player Wingsuit",
    "properties": [
      {
        "name": "boostEnabled",
        "type": "boolean",
        "description": "",
        "readonly": false
      },
      {
        "name": "boostCooldown",
        "type": "number",
        "description": "Boost Cooldown, the game might reset the values if they are above 7, so the property might return a wrong value",
        "readonly": false
      },
      {
        "name": "boostDuration",
        "type": "number",
        "description": "Boost Duration, the game might reset the values if they are above 7, so the property might return a wrong value",
        "readonly": false
      },
      {
        "name": "boostPower",
        "type": "number",
        "description": "Boost Power, the game might reset the values if they are above 7, so the property might return a wrong value",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": []
    }
  },
  {
    "name": "World",
    "description": "Class to manipulate the game world.",
    "properties": [
      {
        "name": "weather",
        "type": "number",
        "description": "weather id (TODO: link weather types)",
        "readonly": false
      },
      {
        "name": "weatherVisible",
        "type": "boolean",
        "description": "",
        "readonly": false
      },
      {
        "name": "moonColor",
        "type": "RGBA",
        "description": "RGBA color of the moon",
        "readonly": false
      },
      {
        "name": "sunPosition",
        "type": "Vector2f",
        "description": "2D position of the sun",
        "readonly": false
      },
      {
        "name": "sunHDRScale",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "sunColor",
        "type": "RGBA",
        "description": "RGBA color of the sun",
        "readonly": false
      },
      {
        "name": "time",
        "type": "TimeOfDay",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "SetTime",
        "description": "Sets the local world time\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| hour | number | hour (0-24) |\n| minute | number | minute (0-60) |\n| p3 | number |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "ResetSunPosition",
        "description": "World.ResetSunPosition()\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CheckpointEnter",
    "description": "Called when a Player enters a Checkpoint",
    "properties": [
      {
        "name": "checkpoint",
        "type": "Checkpoint",
        "description": "the Checkpoint that is being entered",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "CheckpointLeave",
    "description": "Called when a Player leaves a Checkpoint",
    "properties": [
      {
        "name": "checkpoint",
        "type": "Checkpoint",
        "description": "the Checkpoint that is being left",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "GameRender",
    "description": "Called every frame (please ask Alex for more details please, we'll appreciate it a lot)",
    "properties": [
      {
        "name": "scriptingRenderer",
        "type": "Renderer",
        "description": "The active renderer object",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "GameTeleportCompleted",
    "description": "This event is called when the map is fully loaded after teleporting.",
    "properties": [],
    "methods": []
  },
  {
    "name": "GameTeleportInitiated",
    "description": "This event is called when a teleport has been requested.",
    "properties": [],
    "methods": []
  },
  {
    "name": "GameUpdateRender",
    "description": "This event is called when the game 2D rendering has started. This is the perfect place to render to the screen.",
    "properties": [
      {
        "name": "scriptingRenderer",
        "type": "Renderer",
        "description": "The active renderer object",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PackageLoaded",
    "description": "",
    "properties": [
      {
        "name": "package",
        "type": "Package",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "Render",
    "description": "This event is called when the game 2D rendering has started. This is the perfect place to render to the screen.",
    "properties": [
      {
        "name": "scriptingRenderer",
        "type": "Renderer",
        "description": "The active renderer object",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "ScriptError",
    "description": "",
    "properties": [
      {
        "name": "file",
        "type": "string",
        "description": "",
        "readonly": false
      },
      {
        "name": "line",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "error",
        "type": "null",
        "description": "",
        "readonly": false
      },
      {
        "name": "stringtrace",
        "type": "unknown",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "WebsitesApproved",
    "description": "Called when the client approved the requested websites (referenced in package.json)",
    "properties": [],
    "methods": []
  },
  {
    "name": "jcmp",
    "description": "Global instance of JCMPNamespace.",
    "properties": [
      {
        "name": "packages",
        "type": "Array<Package>",
        "description": "all loaded packages",
        "readonly": false
      },
      {
        "name": "events",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "networkVersion",
        "type": "number",
        "description": "the current network version of the server",
        "readonly": false
      },
      {
        "name": "version",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "approvedWebsites",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "ui",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "viewportSize",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "localPlayer",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "players",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "world",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "settings",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "vehicles",
        "type": "undefined",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": [
        "Instance"
      ]
    }
  },
  {
    "name": "Argument",
    "description": "Represents an argument(flag) that has been passed to the server (-name=value)",
    "properties": [
      {
        "name": "key",
        "type": "string",
        "description": "Argument name",
        "readonly": false
      },
      {
        "name": "value",
        "type": "string",
        "description": "Argument value",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "key",
          "type": "string",
          "description": "Argument key",
          "optional": true
        },
        {
          "name": "value",
          "type": "string",
          "description": "Argument value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "BikeHandling",
    "description": "",
    "properties": [
      {
        "name": "topSpeedKph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "topSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "dragCoefficient",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmMass",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmLinearDamping",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmAngularDamping",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmGravityFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "landGlobal",
        "type": "CarHandlingLandGlobal",
        "description": "",
        "readonly": false
      },
      {
        "name": "engine",
        "type": "CarHandlingEngine",
        "description": "",
        "readonly": false
      },
      {
        "name": "engineTransmission",
        "type": "CarHandlingEngineTransmission",
        "description": "",
        "readonly": false
      },
      {
        "name": "brakes",
        "type": "CarHandlingBrakes",
        "description": "",
        "readonly": false
      },
      {
        "name": "steering",
        "type": "BikeHandlingSteering",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BikeHandlingSteering",
    "description": "",
    "properties": [
      {
        "name": "landSteering",
        "type": "CarHandlingSteering",
        "description": "",
        "readonly": false
      },
      {
        "name": "wheelie",
        "type": "BikeHandlingSteeringWheelie",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BikeHandlingSteeringWheelie",
    "description": "",
    "properties": [
      {
        "name": "maxLeanAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "inputReactiveness",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "deadZone",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "wheelieAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "wheelieTorque",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "nosieAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "nosieTorque",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandling",
    "description": "",
    "properties": [
      {
        "name": "propellers",
        "type": "BoatHandlingPropellers",
        "description": "",
        "readonly": false
      },
      {
        "name": "fins",
        "type": "BoatHandlingFins",
        "description": "",
        "readonly": false
      },
      {
        "name": "steering",
        "type": "BoatHandlingSteering",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandlingFins",
    "description": "",
    "properties": [
      {
        "name": "referenceSpeedMs",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pressureDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pressureDrag2",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandlingPropellers",
    "description": "",
    "properties": [
      {
        "name": "maxThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxReverseRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "diameter",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitch",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "dockingControls",
        "type": "BoatHandlingPropellersDockingControls",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandlingPropellersDockingControls",
    "description": "",
    "properties": [
      {
        "name": "maxThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDockingSpeedMs",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDockingControlThrottle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "dockingYawThrottleLimit",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandlingSteering",
    "description": "",
    "properties": [
      {
        "name": "accelerationSmoothing",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steeringfilter",
        "type": "BoatHandlingSteeringSteeringFilter",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "BoatHandlingSteeringSteeringFilter",
    "description": "",
    "properties": [
      {
        "name": "tToFullInputMinSpeedS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tToFullInputMaxSpeedS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "inputStartSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "inputMaxSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterinputSpeedFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "zeroinputSpeedFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "inputSpeedcurveFalloff",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandling",
    "description": "",
    "properties": [
      {
        "name": "topSpeedKph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "topSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "dragCoefficient",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmMass",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmLinearDamping",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmAngularDamping",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pmGravityFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "landGlobal",
        "type": "CarHandlingLandGlobal",
        "description": "",
        "readonly": false
      },
      {
        "name": "engine",
        "type": "CarHandlingEngine",
        "description": "",
        "readonly": false
      },
      {
        "name": "engineTransmission",
        "type": "CarHandlingEngineTransmission",
        "description": "",
        "readonly": false
      },
      {
        "name": "brakes",
        "type": "CarHandlingBrakes",
        "description": "",
        "readonly": false
      },
      {
        "name": "steering",
        "type": "CarHandlingSteering",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingBrakes",
    "description": "",
    "properties": [
      {
        "name": "front",
        "type": "CarHandlingBrakesBrakeAxis",
        "description": "",
        "readonly": false
      },
      {
        "name": "rear",
        "type": "CarHandlingBrakesBrakeAxis",
        "description": "",
        "readonly": false
      },
      {
        "name": "handbrakeFrictionFactor",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingBrakesBrakeAxis",
    "description": "",
    "properties": [
      {
        "name": "handbrake",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxBrakeTorque",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minTimeToBlock",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingEngine",
    "description": "",
    "properties": [
      {
        "name": "topSpeedJumpMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "resistanceAtMinRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "resistanceAtMaxRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "resistanceAtOptimalRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "revLimiterRpmDrop",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "optimalRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "torqueFactorAtMaxRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "torqueFactorAtMinRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "torqueFactorAtOptimalRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "clutchSlipRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "engineMinNoise",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "engineDamageNoiseScale",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "engineMaxDamageTorque",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingEngineTransmission",
    "description": "",
    "properties": [
      {
        "name": "gears",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "nitrousGears",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "sequential",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "manualClutch",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "manualClutchBlendRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "manualClutchBlendTime",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "forwardRatioPercentage",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowGearForwardRatioPct",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "topSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowGearsFinalDrive",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "finalDrive",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "reverseUsesForwardGears",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "reverseGearRatio",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "clutchDelay",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "decayTimeToCruiseRpm",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "targetCruiseRpm",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobal",
    "description": "",
    "properties": [
      {
        "name": "linearDampingX",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "linearDampingY",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "linearDampingZ",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "gravityMultiplierGrounded",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "gravityMultiplierInAirUp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "gravityMultiplierInAirDown",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "takeoffPitchDamping",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "frontWheelsDamage",
        "type": "CarHandlingLandGlobalWheelDamage",
        "description": "",
        "readonly": false
      },
      {
        "name": "rearWheelsDamage",
        "type": "CarHandlingLandGlobalWheelDamage",
        "description": "",
        "readonly": false
      },
      {
        "name": "drift",
        "type": "CarHandlingLandGlobalDrift",
        "description": "",
        "readonly": false
      },
      {
        "name": "arcade",
        "type": "CarHandlingLandGlobalArcade",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobalArcade",
    "description": "",
    "properties": [
      {
        "name": "heatBoost",
        "type": "CarHandlingLandGlobalArcadePerformanceBoost",
        "description": "",
        "readonly": false
      },
      {
        "name": "nitroBoost",
        "type": "CarHandlingLandGlobalArcadePerformanceBoost",
        "description": "",
        "readonly": false
      },
      {
        "name": "nitroBoostUpgraded",
        "type": "CarHandlingLandGlobalArcadePerformanceBoost",
        "description": "",
        "readonly": false
      },
      {
        "name": "turboJump",
        "type": "CarHandlingLandGlobalArcadeTurboJump",
        "description": "",
        "readonly": false
      },
      {
        "name": "turboJumpUpgraded",
        "type": "CarHandlingLandGlobalArcadeTurboJump",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobalArcadePerformanceBoost",
    "description": "",
    "properties": [
      {
        "name": "torqueMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "gripMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pushForce",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "boostBlendTime",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "extraTopSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobalArcadeTurboJump",
    "description": "",
    "properties": [
      {
        "name": "fMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "punchDelayTime",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "punchSpeedKph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "topSpeedKph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "topSpeedJumpMultiplier",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobalDrift",
    "description": "",
    "properties": [
      {
        "name": "driftEntrySlipAngle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "driftExitSlipAngle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDriftAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "driftLimitSpreadAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "constantDriftTorque",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDriftTorque",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterSteerTorque",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterSteerTorqueHandbrake",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterSteerTorqueBrake",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "driftYawVelDamp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "overdriftYawVelDamp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "exitDriftYawVelDamp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "velocityRotationStartAngle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "velocityRotationEndAngle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "velocityRotationAmount",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "velocityRotationAngleExp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterSteerRotFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steeringSensitivity",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minSpeedToDriftKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "keepVelocityStrength",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxKeepVelocityAccelerationG",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingLandGlobalWheelDamage",
    "description": "",
    "properties": [
      {
        "name": "skewHealth",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "brokenWheelFrictionFraction",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "brokenWheelRadiusFraction",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "CarHandlingSteering",
    "description": "",
    "properties": [
      {
        "name": "deadZone",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "saturationZone",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tToFullSteerS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxSpeedTToFullSteerS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerAngleMinSpeedDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerAngleMaxSpeedDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerCurveFalloff",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "countersteerSpeedFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerInSpeedFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerInputPowerPc",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerInputPowerDurango",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "steerInputPowerOrbis",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "wheelDriftAligningStrength",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "EventInstance",
    "description": "",
    "properties": [
      {
        "name": "oneShot",
        "type": "boolean",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "EventSystem",
    "description": "The EventSystem is used to communicate between server packages and to clients.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "the event name",
        "readonly": false
      },
      {
        "name": "handler",
        "type": "function",
        "description": "the function to execute when the event is called",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Add",
        "description": "Adds an event handler\n**returns:** _{@link EventInstance}_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "the event name"
          },
          {
            "name": "handler",
            "type": "function",
            "description": "the function to execute when the event is called"
          }
        ],
        "returns": "EventInstance"
      },
      {
        "name": "Call",
        "description": "Calls an Event.\n\nThis function always returns an array with all return values from all event handlers for that name.\n**returns:** _Array_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "Array"
      },
      {
        "name": "Remove",
        "description": "Parameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | {@link EventInstance} |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "RemoveAll",
        "description": "jcmp.events.RemoveAll(string p1)\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| p1 | string |  |\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "AddRemoteCallable",
        "description": "jcmp.events.AddRemoteCallable(string name, function handler)\nAdds an event that can be called from client scripts.\n\nThe first argument in the handler is the {@link Player} from where the event is being called.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| name | string | the event name |\n| handler | function | the function to execute when the event is called |\nExample\n```js\njcmp.events.AddRemoteCallable('MyEvent', player => { console.log(`${player.name} called MyEvent!`); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "CallRemote",
        "description": "jcmp.events.CallRemote(string name, {@link Player} or ```js\nnull\n``` target, any ...args)\nCalls an Event on the client side to one or all {@link Player}s. Other than the normal ```js\nCall\n``` function, this function does not return anything.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| name | string | event name |\n| target | {@link Player} or ```js\nnull\n``` | target to call the event on. If using \\`null\\`, the event will be broadcasted to all clients. |\n| ...args | any | optional event arguments |\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "GameObject",
    "description": "Game Objects (Props)",
    "properties": [
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the GameObject's position in the game world",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the GameObject's rotation in the game world",
        "readonly": false
      },
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "modelHash",
        "type": "string",
        "description": "model hash of the GameObject (TODO: reference to all hashes)",
        "readonly": true
      },
      {
        "name": "dimension",
        "type": "number",
        "description": "world dimension of the GameObject.",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "ApplyForce",
        "description": "Applies a 3d-force to the GameObject\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| direction | {@link Vector3f} | force direction |\n| deltaTime | number | delta time |\nExample\n```js\nvar object = new GameObject('glowstick_yellow'); object.ApplyForce(new Vector3f(100, 0, 0), 1);\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Destroy",
        "description": "GameObject.Destroy()\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Auto Destroy"
      ],
      "yes": [
        "Constructible",
        "Custom Properties"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "model",
          "type": "string",
          "description": "the model name (not hash!) of the object"
        },
        {
          "name": "position",
          "type": "Vector3f",
          "description": "the desired position of the GameObject"
        },
        {
          "name": "rotation",
          "type": "Vector3f",
          "description": "the desired rotation of the GameObject",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "HelicopterHandling",
    "description": "",
    "properties": [
      {
        "name": "model",
        "type": "HelicopterHandlingModel",
        "description": "",
        "readonly": false
      },
      {
        "name": "steering",
        "type": "HelicopterHandlingSteering",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "HelicopterHandlingModel",
    "description": "",
    "properties": [
      {
        "name": "centerOfTorquesX",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "centerOfTorquesY",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "centerOfTorquesZ",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "altitudeInputPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawInputPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchInputPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollInputPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchInputDeadZone",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tToFullYawS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxSpeedTToFullYawS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "bankStartVelocityKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "bankMaxVelocityKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minSpeedDiveKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxSpeedDiveKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addDivePitchDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addClimbPitchDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxRollInputForClimb",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "climbSpeedLowSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "diveSpeedLowSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "minAltitudeInput",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "unsettledAltitudeGainClimb",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "unsettledAltitudeGainDive",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxDivingGs",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxClimbingGs",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addForceForwardPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addForceLateralPower",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "trimInputGain",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "forwardDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lateralDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "verticalDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tailLateralDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tailVerticalDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "angularDrag",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowSpeedMaxDragYawSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "highSpeedMaxDragYawSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawDragNoInput",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "forwardDragNoInput",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lateralDragNoInput",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "verticalDragNoInput",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "tailDistanceToComM",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addForwardForce",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addRightForce",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addLateralFactorPullUp",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxRollDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addBankRollDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "addBankRollPullUpDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxPitchLowSpeedDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxPitchHighSpeedDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterPitchAngleDeg",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterPitchSpeedKmph",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollP",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollI",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollD",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollMaxAmplitude",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchP",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchI",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchD",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchMaxAmplitude",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawP",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawI",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawD",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawMaxAmplitude",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowSpeedAltitudeP",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowSpeedAltitudeI",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "lowSpeedAltitudeD",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "highSpeedAltitudeP",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "highSpeedAltitudeI",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "highSpeedAltitudeD",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "altitudeLimitThresholdLow",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "altitudeLimitThresholdHigh",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "HelicopterHandlingSteering",
    "description": "",
    "properties": [
      {
        "name": "returnPitchLimit",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "returnRollLimit",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "airSteering",
        "type": "PlaneHandlingAirSteering",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "InputAxisTiming",
    "description": "",
    "properties": [
      {
        "name": "timeToMaxInputAtMinSpeedS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "timeToMaxInputAtMaxSpeedS",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "centeringInputTimeFactor",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "counterInputTimeFactor",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "JCMPNamespace",
    "description": "Global JCMP class. Use jcmp in your script.",
    "properties": [
      {
        "name": "packages",
        "type": "Array<Package>",
        "description": "all loaded packages",
        "readonly": true
      },
      {
        "name": "events",
        "type": "EventSystem",
        "description": "event system",
        "readonly": true
      },
      {
        "name": "server",
        "type": "Server",
        "description": "the server instance",
        "readonly": true
      },
      {
        "name": "networkVersion",
        "type": "number",
        "description": "the current network version of the server",
        "readonly": true
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "readonly": true
      },
      {
        "name": "players",
        "type": "Array<Player>",
        "description": "all connected players",
        "readonly": true
      },
      {
        "name": "vehicles",
        "type": "Array<Vehicle>",
        "description": "all spawned vehicles",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible"
      ],
      "yes": [
        "Auto Destroy",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "Matrix",
    "description": "new Matrix()",
    "properties": [
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Matrix's position in the game world",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Transpose",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      },
      {
        "name": "Scale",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "scale",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "Rotate",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "factor",
            "type": "number",
            "description": ""
          },
          {
            "name": "rotation",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "Translate",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "translation",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "LookAt",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Vector3f",
            "description": ""
          },
          {
            "name": "p2",
            "type": "Vector3f",
            "description": ""
          },
          {
            "name": "p3",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "mul",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [
          {
            "name": "p1",
            "type": "Matrix",
            "description": ""
          }
        ],
        "returns": "Matrix"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Matrix}_\n",
        "params": [],
        "returns": "Matrix"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Package",
    "description": "A scripting package that is available or running already",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "the Package's name",
        "readonly": true
      },
      {
        "name": "dir",
        "type": "string",
        "description": "the path to the package",
        "readonly": true
      },
      {
        "name": "valid",
        "type": "boolean",
        "description": "whether the configuration of the package is valid",
        "readonly": true
      },
      {
        "name": "config",
        "type": "string",
        "description": "JSON-encoded string of the package.json",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Start",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nStarts the package\n**returns:** _boolean_\n",
        "params": [],
        "returns": "boolean"
      },
      {
        "name": "Stop",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nStops the package\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "PlaneHandling",
    "description": "",
    "properties": [
      {
        "name": "airSteering",
        "type": "PlaneHandlingAirSteering",
        "description": "",
        "readonly": false
      },
      {
        "name": "engine",
        "type": "PlaneHandlingEngine",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "PlaneHandlingAirSteering",
    "description": "",
    "properties": [
      {
        "name": "maxSteeringAngle",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "accelerationSmoothing",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollReturn",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchReturn",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "referenceMinSpeedKPH",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "referenceMaxSpeedKPH",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "rollAxisTiming",
        "type": "InputAxisTiming",
        "description": "",
        "readonly": false
      },
      {
        "name": "pitchAxisTiming",
        "type": "InputAxisTiming",
        "description": "",
        "readonly": false
      },
      {
        "name": "yawAxisTiming",
        "type": "InputAxisTiming",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "PlaneHandlingEngine",
    "description": "",
    "properties": [
      {
        "name": "minThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "runThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "maxThrustAcceleration",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "taxiingMaxThrust",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "taxiingInputThreshold",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "taxiingTopSpeed",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Player",
    "description": "Immediately kicks the Player from the Server.",
    "properties": [
      {
        "name": "vehicle",
        "type": "Vehicle or undefined",
        "description": "the players current vehicle",
        "readonly": true
      },
      {
        "name": "client",
        "type": "RemoteClient",
        "description": "the associated RemoteClient of the player",
        "readonly": true
      },
      {
        "name": "name",
        "type": "string",
        "description": "the Player's name",
        "readonly": true
      },
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "health",
        "type": "number",
        "description": "the players current health",
        "readonly": false
      },
      {
        "name": "invulnerable",
        "type": "boolean",
        "description": "whether the player is invulnerable to damage",
        "readonly": false
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Player's position in the game world",
        "readonly": false
      },
      {
        "name": "respawnPosition",
        "type": "Vector3f",
        "description": "the position where the player respawns upon calling Player#Respawn",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the Player's rotation in the game world",
        "readonly": false
      },
      {
        "name": "aimPosition",
        "type": "Vector3f",
        "description": "the position the player aims at",
        "readonly": false
      },
      {
        "name": "selectedWeapon",
        "type": "PlayerWeapn",
        "description": "the currently selected(equipped) weapon",
        "readonly": true
      },
      {
        "name": "weapons",
        "type": "Array<PlayerWeapon> or undefined",
        "description": "weapons in the inventory",
        "readonly": true
      },
      {
        "name": "dimension",
        "type": "number",
        "description": "world dimension of the Player.",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Kick",
        "description": "Immediately kicks the Player from the Server.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| reason | string | reason for kicking the Player. currently unused (cannot be seen by the Player) |\nExample\n```js\njcmp.events.Add('PlayerReady', player => { player.Kick('meow!'); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Respawn",
        "description": "Player.Respawn()\nRespawns the Player. The position is stored in ```js\nPlayer.respawnPosition\n```\nExample\n```js\njcmp.events.Add('PlayerDeath', player => { player.respawnPosition = player.position player.Respawn(); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "GiveWeapon",
        "description": "Player.GiveWeapon(number weaponHash, number ammo, boolean equipNow)\nGives the Player a weapon.\n**returns:** _PlayerWeapn_\n",
        "params": [
          {
            "name": "weaponHash",
            "type": "number",
            "description": "the weapon's hash"
          },
          {
            "name": "ammo",
            "type": "number",
            "description": "desired ammunition. If the Player already has the weapon, it will increase the ammo by this number."
          },
          {
            "name": "equipNow",
            "type": "boolean",
            "description": "whether the weapon should be equipped automatically."
          }
        ],
        "returns": "PlayerWeapn"
      },
      {
        "name": "RemoveWeapon",
        "description": "**returns:** _boolean_\n",
        "params": [],
        "returns": "boolean"
      }
    ],
    "flags": {
      "no": [
        "Constructible"
      ],
      "yes": [
        "Auto Destroy",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "PlayerWeapon",
    "description": "A Weapon that is currently in a Players inventory",
    "properties": [
      {
        "name": "modelHash",
        "type": "number",
        "description": "model hash of the PlayerWeapon (TODO: reference to all hashes)",
        "readonly": true
      },
      {
        "name": "slotIndex",
        "type": "number",
        "description": "the weapon slot in the Players inventory",
        "readonly": true
      },
      {
        "name": "magazineAmmo",
        "type": "number",
        "description": "the ammunition left in the magazine",
        "readonly": false
      },
      {
        "name": "reserveAmmo",
        "type": "number",
        "description": "the ammunition left as reserve in the inventory",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "RemoteClient",
    "description": "represents a Client connected to the server.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "the RemoteClient's name",
        "readonly": true
      },
      {
        "name": "ipAddress",
        "type": "string",
        "description": "the ip address of the client",
        "readonly": true
      },
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "ping",
        "type": "number",
        "description": "the client's ping",
        "readonly": true
      },
      {
        "name": "steamId",
        "type": "string",
        "description": "the Steam64ID of the client",
        "readonly": true
      },
      {
        "name": "steamAuthenticated",
        "type": "boolean",
        "description": "whether the client is authenticated via Steam",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Kick",
        "description": "Immediately kicks the Client from the Server.\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| reason | string | reason for kicking the Client. currently unused (cannot be seen by the user) |\nExample\n```js\njcmp.events.Add('ClientConnected', client => { client.Kick('meow!'); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "DoesOwnDLC",
        "description": "RemoteClient.DoesOwnDLC(number dlc)\nChecks whether the client owns the DLC\nAvailable DLCs\n| Name | Value |\n| :-- | :-- |\n| SKY\\_FORTRESS | 400551 |\n| MECH\\_LAND\\_ASSAULT | 400490 |\n| BAVARIUM\\_SEA\\_HEIST | 442051 |\n| AIR\\_LAND\\_SEA | 401850 |\n| FIRESTARTER\\_SKINS | 348880 |\n| CAPSTONE\\_BLOODHOUND\\_RPG | 388294 |\n| KOUSAVA\\_RIFLE | 442050 |\n| FINAL\\_ARGUMENT\\_SNIPER | 488293 |\n| COMBAT\\_BUGGY | 388290 |\n| MINIGUN\\_RACING\\_BOAT | 388291 |\n| ROCKET\\_LAUNCHER\\_SPORTS\\_CAR | 388292 |\n| REAPER\\_MISSILE\\_MECH | 442052 |\n**returns:** _boolean_\n",
        "params": [
          {
            "name": "dlc",
            "type": "number",
            "description": "DLC number"
          }
        ],
        "returns": "boolean"
      }
    ],
    "flags": {
      "no": [
        "Constructible"
      ],
      "yes": [
        "Auto Destroy",
        "Custom Properties"
      ]
    }
  },
  {
    "name": "RGB",
    "description": "new RGB(number r, number g, number b)",
    "properties": [
      {
        "name": "r",
        "type": "number",
        "description": "red channel value (0-255)",
        "readonly": false
      },
      {
        "name": "g",
        "type": "number",
        "description": "green channel value (0-255)",
        "readonly": false
      },
      {
        "name": "b",
        "type": "number",
        "description": "blue channel value (0-255)",
        "readonly": false
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "r",
          "type": "number",
          "description": "red channel value (0-255)",
          "optional": true
        },
        {
          "name": "g",
          "type": "number",
          "description": "green channel value (0-255)",
          "optional": true
        },
        {
          "name": "b",
          "type": "number",
          "description": "blue channel value (0-255)",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "RGBA",
    "description": "new RGBA(number r, number g, number b, number a)",
    "properties": [
      {
        "name": "r",
        "type": "number",
        "description": "red channel value (0-255)",
        "readonly": true
      },
      {
        "name": "g",
        "type": "number",
        "description": "green channel value (0-255)",
        "readonly": true
      },
      {
        "name": "b",
        "type": "number",
        "description": "blue channel value (0-255)",
        "readonly": true
      },
      {
        "name": "a",
        "type": "number",
        "description": "alpha channel value (0-255)",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "r",
          "type": "number",
          "description": "red channel value (0-255)",
          "optional": true
        },
        {
          "name": "g",
          "type": "number",
          "description": "green channel value (0-255)",
          "optional": true
        },
        {
          "name": "b",
          "type": "number",
          "description": "blue channel value (0-255)",
          "optional": true
        },
        {
          "name": "a",
          "type": "number",
          "description": "alpha channel value (0-255)",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Server",
    "description": "Information about the Server",
    "properties": [
      {
        "name": "args",
        "type": "Array<Argument>",
        "description": "Server Arguments (flags)",
        "readonly": true
      },
      {
        "name": "config",
        "type": "string",
        "description": "JSON-encoded string of the config.json",
        "readonly": true
      },
      {
        "name": "currentTickRate",
        "type": "number",
        "description": "server fps",
        "readonly": true
      },
      {
        "name": "clients",
        "type": "Array<RemoteClient>",
        "description": "connected clients",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "Stop",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nStops the Server\nExample\n```js\njcmp.server.Stop();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Restart",
        "description": "Server.Restart()\nThis function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nRestarts the Server\nExample\n```js\njcmp.server.Restart();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "AddInputHandler",
        "description": "Server.AddInputHandler(function handler)\nAdds a handler for the server input (console input)\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| handler | function | input handler |\nExample\n```js\njcmp.server.AddInputHandler(text => { console.log(`input: ${text}`); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "UpdateClientPackage",
        "description": "Server.UpdateClientPackage(string p1)\nParameter\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "Vector2",
    "description": "new Vector2(number x, number y)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector2",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector2f",
    "description": "new Vector2f(number x, number y)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector2f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector2f",
            "description": ""
          }
        ],
        "returns": "Vector2f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector2f}_\n",
        "params": [],
        "returns": "Vector2f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector3",
    "description": "new Vector3(number x, number y, number z)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector3",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector3f",
    "description": "new Vector3f(number x, number y, number z)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector3f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector3f",
            "description": ""
          }
        ],
        "returns": "Vector3f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector3f}_\n",
        "params": [],
        "returns": "Vector3f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector4",
    "description": "new Vector4(number x, number y, number z, number w)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "w",
        "type": "number",
        "description": "W value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector4",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        },
        {
          "name": "w",
          "type": "number",
          "description": "W value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vector4f",
    "description": "new Vector4f(number x, number y, number z, number w)",
    "properties": [
      {
        "name": "x",
        "type": "number",
        "description": "X value",
        "readonly": false
      },
      {
        "name": "y",
        "type": "number",
        "description": "Y value",
        "readonly": false
      },
      {
        "name": "z",
        "type": "number",
        "description": "Z value",
        "readonly": false
      },
      {
        "name": "w",
        "type": "number",
        "description": "W value",
        "readonly": false
      },
      {
        "name": "length",
        "type": "number",
        "description": "length of the Vector4f",
        "readonly": true
      }
    ],
    "methods": [
      {
        "name": "mul",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "div",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "sub",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [
          {
            "name": "vec",
            "type": "Vector4f",
            "description": ""
          }
        ],
        "returns": "Vector4f"
      },
      {
        "name": "add",
        "description": "**returns:** _{@link Vector4f}_\n",
        "params": [],
        "returns": "Vector4f"
      }
    ],
    "flags": {
      "no": [
        "Custom Properties"
      ],
      "yes": [
        "Constructible",
        "Auto Destroy"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "x",
          "type": "number",
          "description": "X value",
          "optional": true
        },
        {
          "name": "y",
          "type": "number",
          "description": "Y value",
          "optional": true
        },
        {
          "name": "z",
          "type": "number",
          "description": "Z value",
          "optional": true
        },
        {
          "name": "w",
          "type": "number",
          "description": "W value",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "Vehicle",
    "description": "Vehicle",
    "properties": [
      {
        "name": "driver",
        "type": "Player",
        "description": "the player driving the vehicle",
        "readonly": false
      },
      {
        "name": "position",
        "type": "Vector3f",
        "description": "the Vehicle's position in the game world",
        "readonly": false
      },
      {
        "name": "rotation",
        "type": "Vector3f",
        "description": "the vehicles rotation",
        "readonly": false
      },
      {
        "name": "networkId",
        "type": "number",
        "description": "the network id of this entity. It is not unique across different entities and will be re-assigned once this entity was destroyed",
        "readonly": true
      },
      {
        "name": "destroyed",
        "type": "boolean",
        "description": "is the vehicle is destroyed or not (read-only)",
        "readonly": true
      },
      {
        "name": "nitroEnabled",
        "type": "boolean",
        "description": "whether the vehicle is equipped with bavarium nitro",
        "readonly": false
      },
      {
        "name": "turboJumpEnabled",
        "type": "boolean",
        "description": "whether the vehicle is equipped with the bavarium jump modification",
        "readonly": false
      },
      {
        "name": "primaryColor",
        "type": "number",
        "description": "the vehicles color ID",
        "readonly": false
      },
      {
        "name": "linearVelocity",
        "type": "Vector3f",
        "description": "the vehicles positional speed",
        "readonly": false
      },
      {
        "name": "angularVelocity",
        "type": "Vector3f",
        "description": "the vehicles rotational speed",
        "readonly": false
      },
      {
        "name": "aimPostion",
        "type": "Vector3f",
        "description": "",
        "readonly": false
      },
      {
        "name": "health",
        "type": "number",
        "description": "the vehicles health",
        "readonly": false
      },
      {
        "name": "modelHash",
        "type": "number",
        "description": "model hash of the Vehicle (TODO: reference to all hashes)",
        "readonly": true
      },
      {
        "name": "handling",
        "type": "VehicleHandling",
        "description": "",
        "readonly": true
      },
      {
        "name": "dimension",
        "type": "number",
        "description": "world dimension of the Vehicle.",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Repair",
        "description": "This function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nFully repairs the given vehicle\nExample\n```js\njcmp.events.Add('VehicleDestroyed', vehicle => { vehicle.Repair(); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Respawn",
        "description": "Vehicle.Respawn()\nThis function is marked as **unstable** and is not recommended for use in production environments. It is not guaranteed to work at all (we're sorry).\nRespawns the vehicle at its initial spawning position\nExample\n```js\njcmp.events.Add('VehicleDestroyed', vehicle => { vehicle.Respawn(); });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "GetOccupant",
        "description": "Vehicle.GetOccupant(number seat)\nGet the occupant of a vehicle seat\n**returns:** _{@link Player} or undefined_\n",
        "params": [
          {
            "name": "seat",
            "type": "number",
            "description": "the vehicles seat"
          }
        ],
        "returns": "Player or undefined"
      },
      {
        "name": "SetOccupant",
        "description": "Set the occupant of the given vehicle.\n_Note: if the player is not in the vicinity of the vehicle, he will first be teleported there automatically (slightly above the vehicle in the air)._\nParameter\n| Name | Type | Description |\n| :-- | :-- | :-- |\n| seat | number | the vehicles seat |\n| player | {@link Player} | the player entity |\nExample\n```js\njcmp.events.Add('PlayerReady', player => { var vehicle = new Vehicle(28454791, player.position, player.rotation); //Spawn the vehicle at the players position vehicle.SetOccupant(0, player); //Assign the player to the driver seat });\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "Destroy",
        "description": "Vehicle.Destroy()\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Auto Destroy"
      ],
      "yes": [
        "Constructible",
        "Custom Properties"
      ]
    },
    "constructor": {
      "params": [
        {
          "name": "modelHash",
          "type": "number",
          "description": "the model hash (not name!) of the vehicle"
        },
        {
          "name": "position",
          "type": "Vector3f",
          "description": "the desired position of the vehicle"
        },
        {
          "name": "rotation",
          "type": "Vector3f",
          "description": "the desired rotation of the vehicle",
          "optional": true
        }
      ]
    }
  },
  {
    "name": "VehicleHandling",
    "description": "",
    "properties": [
      {
        "name": "car",
        "type": "CarHandling",
        "description": "",
        "readonly": true
      },
      {
        "name": "boat",
        "type": "BoatHandling",
        "description": "",
        "readonly": true
      },
      {
        "name": "helicopter",
        "type": "HelicopterHandling",
        "description": "",
        "readonly": true
      },
      {
        "name": "plane",
        "type": "PlaneHandling",
        "description": "",
        "readonly": true
      },
      {
        "name": "bike",
        "type": "BikeHandling",
        "description": "",
        "readonly": true
      }
    ],
    "methods": [],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "ClientConnected",
    "description": "Called when a RemoteClient connected to the Server",
    "properties": [
      {
        "name": "client",
        "type": "RemoteClient",
        "description": "the Client that connected",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "ClientConnectRequest",
    "description": "Called when a RemoteClient tries to connect to the Server",
    "properties": [
      {
        "name": "playerName",
        "type": "string",
        "description": "the players/clients name",
        "readonly": false
      },
      {
        "name": "ipAddress",
        "type": "string",
        "description": "the associated connection ip address",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "ClientDisconnected",
    "description": "Called when a RemoteClient disconnected from the Server",
    "properties": [
      {
        "name": "client",
        "type": "RemoteClient",
        "description": "the Client that disconnected",
        "readonly": false
      },
      {
        "name": "reason",
        "type": "number",
        "description": "disconnect reason (0: closed by user, 1: timeout, 2: kicked)",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PackageLoaded",
    "description": "",
    "properties": [
      {
        "name": "package",
        "type": "Package",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerCreated",
    "description": "",
    "properties": [
      {
        "name": "player",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerDeath",
    "description": "",
    "properties": [
      {
        "name": "player_scripting_component",
        "type": "Player",
        "description": "",
        "readonly": false
      },
      {
        "name": "killer_scripting_component",
        "type": "unknown",
        "description": "",
        "readonly": false
      },
      {
        "name": "reason",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerDestroyed",
    "description": "",
    "properties": [
      {
        "name": "player",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerHijackVehicle",
    "description": "",
    "properties": [
      {
        "name": "occupant",
        "type": "Player",
        "description": "",
        "readonly": false
      },
      {
        "name": "entity",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      },
      {
        "name": "current_player_scripting",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerReady",
    "description": "",
    "properties": [
      {
        "name": "player",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerRespawn",
    "description": "",
    "properties": [
      {
        "name": "player_scripting_component",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerVehicleEntered",
    "description": "called when a Player enters a Vehicle.",
    "properties": [
      {
        "name": "player",
        "type": "unknown",
        "description": "",
        "readonly": false
      },
      {
        "name": "vehicle",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      },
      {
        "name": "seatIndex",
        "type": "number",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerVehicleExited",
    "description": "",
    "properties": [
      {
        "name": "this",
        "type": "unknown",
        "description": "",
        "readonly": false
      },
      {
        "name": "old_vehicle",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      },
      {
        "name": "player_component",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "PlayerVehicleSeatChange",
    "description": "",
    "properties": [
      {
        "name": "this",
        "type": "unknown",
        "description": "",
        "readonly": false
      },
      {
        "name": "vehicle",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      },
      {
        "name": "seatIndex",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "player_component",
        "type": "Player",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "ScriptError",
    "description": "",
    "properties": [
      {
        "name": "file",
        "type": "string",
        "description": "",
        "readonly": false
      },
      {
        "name": "line",
        "type": "number",
        "description": "",
        "readonly": false
      },
      {
        "name": "error",
        "type": "null",
        "description": "",
        "readonly": false
      },
      {
        "name": "stringtrace",
        "type": "unknown",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "VehicleCreated",
    "description": "",
    "properties": [
      {
        "name": "vehicle",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "VehicleDestroyed",
    "description": "",
    "properties": [
      {
        "name": "vehicle",
        "type": "Vehicle",
        "description": "",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "VehicleExploded",
    "description": "called when a Vehicle is exploded.",
    "properties": [
      {
        "name": "entity_manager",
        "type": "Vehicle",
        "description": "the Vehicle that was exploded.",
        "readonly": false
      }
    ],
    "methods": []
  },
  {
    "name": "jcmp",
    "description": "The global instance of the JCMPNamespace.",
    "properties": [
      {
        "name": "packages",
        "type": "Array<Package>",
        "description": "all loaded packages",
        "readonly": false
      },
      {
        "name": "events",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "server",
        "type": "Server",
        "description": "the server instance",
        "readonly": false
      },
      {
        "name": "networkVersion",
        "type": "number",
        "description": "the current network version of the server",
        "readonly": false
      },
      {
        "name": "version",
        "type": "undefined",
        "description": "",
        "readonly": false
      },
      {
        "name": "players",
        "type": "Array<Player>",
        "description": "all connected players",
        "readonly": false
      },
      {
        "name": "vehicles",
        "type": "Array<Vehicle>",
        "description": "all spawned vehicles",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "Destroy",
        "description": "",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Auto Destroy",
        "Custom Properties"
      ],
      "yes": [
        "Instance"
      ]
    }
  },
  {
    "name": "JCMPNamespace",
    "description": "JCMP Namespace class for CEF. The global instance is jcmp.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "event name",
        "readonly": false
      },
      {
        "name": "handler",
        "type": "function",
        "description": "event handler",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "AddEvent",
        "description": "Listens on a event called from client packages or other UIs\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "handler",
            "type": "function",
            "description": "event handler"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "CallEvent",
        "description": "Calls another UI event or client package event\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "CallLocalEvent",
        "description": "Calls the given event on a client package that registered an event using WebUIWindow#AddEvent\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "ShowCursor",
        "description": "Shows the Cursor (refcounted)\nExample\n```js\njcmp.ShowCursor();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "HideCursor",
        "description": "jcmp.HideCursor()\nhides the Cursor (refcounted)\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Auto Destroy"
      ]
    }
  },
  {
    "name": "jcmp",
    "description": "The global instance of the JCMPNamespace.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "event name",
        "readonly": false
      },
      {
        "name": "handler",
        "type": "function",
        "description": "event handler",
        "readonly": false
      }
    ],
    "methods": [
      {
        "name": "AddEvent",
        "description": "Listens on a event called from client packages or other UIs\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "handler",
            "type": "function",
            "description": "event handler"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "CallEvent",
        "description": "Calls another UI event or client package event\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "CallLocalEvent",
        "description": "Calls the given event on a client package that registered an event using WebUIWindow#AddEvent\n**returns:** _undefined_\n",
        "params": [
          {
            "name": "name",
            "type": "string",
            "description": "event name"
          },
          {
            "name": "...args",
            "type": "any",
            "description": "optional event arguments"
          }
        ],
        "returns": "undefined"
      },
      {
        "name": "ShowCursor",
        "description": "Shows the Cursor (refcounted)\nExample\n```js\njcmp.ShowCursor();\n```\n",
        "params": [],
        "returns": ""
      },
      {
        "name": "HideCursor",
        "description": "jcmp.HideCursor()\nhides the Cursor (refcounted)\nExample\n",
        "params": [],
        "returns": ""
      }
    ],
    "flags": {
      "no": [
        "Constructible",
        "Custom Properties"
      ],
      "yes": [
        "Instance",
        "Auto Destroy"
      ]
    }
  }
]